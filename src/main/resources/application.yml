server:
  port: 8443
  error:
    include-message: always
  compression:
    enabled: true
  ssl:
    key-store: ./springboot.p12
    key-store-password: password
    key-store-type: pkcs12
    key-alias: springboot
    key-password: password

  # You can also configure the compression thresholds like this
#    min-response-size=2048
#    mime-types=text/html,text/xml,text/plain,text/css,application/json
springdoc:
  api-docs:
    enabled: true
    path: /api-docs/swagger.json
  swagger-ui:
    disable-swagger-default-url: false
    path: /api-docs
logging:
  level:
    root: info
management:
  endpoint:
    info:
      enabled: true
    health:
      show-details: always
      show-components: always
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, prometheus
      base-path: /
spring:
  datasource:
    url: jdbc:postgresql://localhost:5431/movie_api_db  # replace <your chosen database name>
    driver-class-name: org.postgresql.Driver
    username: root # adapt username accordingly
    # set PG_PASSWORD in your environment, e.g., by running "export PG_PASSWORD=<your chosen password" in the command line
    password: theSeniorDev
  jpa:
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true # By default, DDL statements will only be generated for embedded databases.
    # By default, Spring Boot will try to populate the database from data.sql on startup,
    # i.e. before JPA has the opportunity to generate DDL statements from classes annotated with @Entity.
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create-drop
    open-in-view: false
  sql:
    init:
      # The default value is 'embedded', which only works for in-memory databases.
      # Since we're using a 'non-embedded' database here, we now need to set this to 'always'.
      mode: always
